name: firebase

on:
  push:
    paths:
      - 'firebase/**'
      - '.github/workflows/firebase.yml'

    branches:
      - main

  pull_request:
    paths:
      - 'firebase/**'
      - '.github/workflows/firebase.yml'

    branches:
      - main

env:
  NODE_ENV: ${{ (github.event_name == 'push' && 'production') || 'development' }}

jobs:
  setup-firestore:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/firestore
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-firestore-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/firestore', '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive --production=false

  setup-functions:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/functions
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_functions
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-functions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/functions', '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_functions.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive --production=false

  # lint:
  #   needs: setup
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [14.x]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cache node_modules
  #       id: node_modules_cache_id
  #       uses: actions/cache@v2
  #       with:
  #         path: '**/node_modules'
  #         key: ${{ runner.os }}-xxfunctions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/functions', '/yarn.lock')) }}

  #     - name: Lint
  #       run: yarn lint
  lint-functions:
    needs: setup-functions
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/functions
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_functions
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-functions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/functions', '/yarn.lock')) }}

      - name: Lint
        run: yarn lint

  test-firestore:
    needs: setup-firestore
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/firestore
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-firestore-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/firestore', '/yarn.lock')) }}

      - name: Test
        uses: w9jds/firebase-action@master
        with:
          args: emulators:exec --only firestore 'yarn --cwd firebase/firestore test'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  test-functions:
    if: github.event_name == 'pull_request'
    needs: setup-functions
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/functions
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_functions
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-functions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/functions', '/yarn.lock')) }}

      - name: Generate env
        run: echo $ENV_FILE > .env.dev.json
        env:
          ENV_FILE: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV }}

      - name: Test
        run: yarn test --no-cache

  build-functions:
    if: github.event_name == 'push'
    needs: setup-functions
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: firebase/functions
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_functions
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-functions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/functions', '/yarn.lock')) }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: lib
          path: firebase/functions/lib

  deploy-firestore:
    if: github.event_name == 'push'
    needs: [test-firestore]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Cloud Firestore rules
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only firestore:rules
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-functions:
    if: github.event_name == 'push'
    needs: [lint-functions, build-functions]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_functions
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-firebase-functions-${{ hashFiles(format('{0}{1}{2}', github.workspace, '/firebase/functions', '/yarn.lock')) }}

      - uses: actions/download-artifact@v2
        with:
          name: lib
          path: firebase/functions/lib

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
