name: release-functions

on:
  push:
    paths:
      - 'functions/**'

    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: functions

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ matrix.os }}-functions-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ matrix.os }}-functions-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ matrix.os }}-functions-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: lib
          path: lib

  deploy:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: lib
          path: lib

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOROGUE }}
