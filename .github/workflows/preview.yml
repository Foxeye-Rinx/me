name: preview
on:
  pull_request:
    paths-ignore:
      - 'functions/**'

    branches:
      - 'main'

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

  build:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Build
        run: yarn build
        env:
          GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
          GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
          ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          GATSBY_GITHUB_API: ${{ secrets.GATSBY_GITHUB_API }}
          RELATIVE_CI_KEY: ${{ secrets.RELATIVE_CI_KEY }}

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: public

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      details_url: ${{ steps.firebase.outputs.details_url }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: public

      - uses: FirebaseExtended/action-hosting-deploy@v0
        id: firebase
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOROGUE }}'
          expires: 1d
          projectId: blorogue
          target: blog

  performance:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Make dir
        run: mkdir lighthouse

      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          urls: ${{ needs.deploy.outputs.details_url }}
          locale: ja
          outputDirectory: lighthouse
          prCommentEnabled: true
